import logging

logging.basicConfig(filename="sample.log", level=logging.INFO)
 
logging.debug("This is a debug message")
logging.info("Informational message")
logging.error("An error has happened!")


from aiogram import Bot, Dispatcher, executor, types
from aiogram.utils.callback_data import CallbackData
logging.basicConfig(level=logging.INFO)
from aiogram import types
from settings import TOKEN_FTG_BOT,ID_ADMIN
bot = Bot(token=TOKEN_FTG_BOT)
dp = Dispatcher(bot)

id_admin = ID_ADMIN # –º–æ–π –∞–π–¥–∏


import os 
posts_query = CallbackData('vote', 'action')
 
#–ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª
@dp.message_handler(commands=['get_file'])
async def get_main_file(message: types.Message):
    try:
        if message.chat.type == types.ChatType.PRIVATE:
            uid=str(message.from_user.id)
            if uid == str(id_admin):
                msg=message.text
                if msg[10:] == '':
                    await message.answer(  '–ß–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞.')
                else:
                    await message.answer(  '–ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è,—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç')
                    myfile = open("{}.py".format(msg[10:]), 'rb')
                    await bot.send_document( message.chat.id, myfile)
                    myfile.close()
            else:
                await message.answer(  'There iz some problem,only for admins.  =(')
                print(uid)
                print(id_admin)
    except Exception as e:
        await message.answer(  '–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')


#–ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏
@dp.message_handler(commands=['get_log'])
async def get_log_file(message: types.Message):
    try:
        if message.chat.type == types.ChatType.PRIVATE:
            uid=str(message.from_user.id)
            if uid == str(id_admin):
                await message.answer(  '–ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è,—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç')
                myfile = open("sample.log", 'rb')
                await bot.send_document( message.chat.id, myfile)
                myfile.close()
            else:
                await message.answer(  'There iz some problem,only for admins.  =(')
                print(uid)
                print(id_admin)
    except Exception as e:
        print(e)
        await message.answer(  '–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')



        
#–õ–æ–≤–∏–º —Ñ–∞–π–ª—ã
@dp.message_handler(content_types=['document'])
async def help_file_up(message: types.Message):
    try:
        if message.chat.type == types.ChatType.PRIVATE:
            uid=str(message.from_user.id)
            if uid == str(id_admin):
                await message.answer(  '–ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è,—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç')
                name = message["document"]["file_name"][:-3]
                #print(name)
                #d = date.today()
                l=len(message["document"]["file_name"])
                print(message["document"]["file_name"][l-3:])
                if message["document"]["file_name"][l-3:] == '.py' :
                    try:
                        await bot.download_file_by_id(message.document.file_id,destination="{}.py".format(name))
                        await message.answer(  'file saved #1')
                    except Exception as e:
                        await bot.download_file_by_id(message.document.file_id,destination="{}.py".format(name))
                        await message.answer(  'file saved')
                else:
                    await message.answer( '–¢–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã .py')
            else:
                await message.answer(  'You dont have permission')
    except Exception as e:
        await message.answer(  '–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')
        print(e)
        
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


@dp.message_handler(types.ChatType.is_private,commands=['start'])#  
async def start_message(message: types.Message):

    #–ö–Ω–æ–ø–∫–∏
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
    ###markup = types.ReplyKeyboardMarkup(row_width=2)
    itembtn4 = types.KeyboardButton('/start')
    itembtn5 = types.KeyboardButton('/get_file')
    itembtn6 = types.KeyboardButton('/get_log')
    ###markup.add(itembtn1, itembtn2, itembtn3 ,itembtn4,itembtn5,itembtn6)
    markup.add(itembtn4,itembtn5,itembtn6)
    tg_nick=message.from_user.username
    await message.answer(  '–ü—Ä–∏–≤–µ—Ç, –±–æ—Ç –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤.'+
    '\nüëâ /get_file —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —É–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∂–µ–ª–∞–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞'+
    '\nüëâ —á—Ç–æ –±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç,–ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –µ–≥–æ –º–Ω–µ. –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±–æ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º .py'+
    '\nüëâ /get_log –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–æ–≥',reply_markup=markup)
    if message.from_user.id == id_admin:
        await message.answer(  '–æ–æ–æ,–∫–∞–∫–∏–µ –ª—é–¥–∏ –≤ –Ω–∞—à–µ–π –¥–µ—Ä–µ–≤–Ω–µ,–ø—Ä–æ—Ö–æ–¥–∏ —Å–∞–¥–∏—Å—å,—É—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è –ø–æ—É–¥–æ–±–Ω–µ–π.'+
        '\n /get_file,/get_log')
    else:
        await message.answer(  '–ë–æ—Ç –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ , —Å–æ—Ä—è–Ω...')
    print('–°—Ç–∞—Ä—Ç –æ—Ç: ',str(message.from_user.id))
    



if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
